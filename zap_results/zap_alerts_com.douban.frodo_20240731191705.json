[
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "pUxKZHCX9fg",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "0",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.",
        "messageId": "5",
        "inputVector": "",
        "url": "http://119.29.29.98/d?dn=9b359c181424350298033f7795a4d65609cc14f8b5f46178&id=105&ttl=1",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "1",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "5",
        "inputVector": "",
        "url": "http://119.29.29.98/d?dn=9b359c181424350298033f7795a4d65609cc14f8b5f46178&id=105&ttl=1",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "2",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "3",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \namonsul.douban.com\nbid=pUxKZHCX9fg\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "4",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "5",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "6",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "5",
        "inputVector": "",
        "url": "http://119.29.29.98/d?dn=9b359c181424350298033f7795a4d65609cc14f8b5f46178&id=105&ttl=1",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "7",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "8",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "7",
        "inputVector": "",
        "url": "https://amonsul.douban.com/check2?apikey=0dad551ec0f84ed02907ff5c42e8ec70&app_name=Frodo_Android&ltime=1722424614783&did=bab139d941928e6c0fe5af156daa33fdd43c1687&sdkVersion=1.5.9",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "9",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:JSESSIONID",
        "method": "POST",
        "evidence": "aaaxeGd1Ox1Jhh6dEGiez",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "JSESSIONID",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "10",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "no-cache",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "9",
        "inputVector": "",
        "url": "https://et.tanx.com/tsc?os=android",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "11",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10019",
        "cweid": "345",
        "confidence": "Medium",
        "wascid": "12",
        "description": "The Content-Type header was either missing or empty.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "CWE-345": "https://cwe.mitre.org/data/definitions/345.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)",
        "solution": "Ensure each page is setting the specific and appropriate content-type value for the content being delivered.",
        "alert": "Content-Type Header Missing",
        "param": "content-type",
        "attack": "",
        "name": "Content-Type Header Missing",
        "risk": "Informational",
        "id": "12",
        "alertRef": "10019-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: JSESSIONID",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "JSESSIONID",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "13",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=0",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).",
        "messageId": "9",
        "inputVector": "",
        "url": "https://et.tanx.com/tsc?os=android",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://datatracker.ietf.org/doc/html/rfc6797#section-6.2",
        "solution": "Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.",
        "alert": "Strict-Transport-Security Disabled",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Disabled",
        "risk": "Low",
        "id": "14",
        "alertRef": "10035-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: JSESSIONID",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "JSESSIONID",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "15",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "9",
        "inputVector": "",
        "url": "https://et.tanx.com/tsc?os=android",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "16",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: JSESSIONID",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "JSESSIONID",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "17",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Resin/4.0.27",
        "pluginId": "10036",
        "cweid": "200",
        "confidence": "High",
        "wascid": "13",
        "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html",
            "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttps://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)\nhttps://www.troyhunt.com/shhh-dont-let-your-response-headers/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.",
        "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "param": "",
        "attack": "",
        "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "risk": "Low",
        "id": "18",
        "alertRef": "10036"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "19",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "11",
        "inputVector": "",
        "url": "https://android.bugly.qq.com/rqd/async?aid=ce1cc35f-5f78-40d1-aded-66083384de39",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "20",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "POST",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "14",
        "inputVector": "",
        "url": "https://xlog.jd.com/v1/an",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "21",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://janapi.jd.com/ansdk/v1/initData",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "22",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "17",
        "inputVector": "",
        "url": "https://janapi.jd.com/ansdk/v1/initData",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "23",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "25",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/mediation?version=1",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "24",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "25",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/mediation?version=1",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "25",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "V5Ajj-J829Q",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "26",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "25",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/mediation?version=1",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "27",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/launch",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "28",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "28",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/ping",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "29",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "30",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "28",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/ping",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "31",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "32",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/launch",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "33",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "28",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/ping",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "34",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=V5Ajj-J829Q\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "35",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "bPj3kySjQ80",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "36",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "x29AOpOwZAE",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "37",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "27",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/launch",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "38",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "39",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "40",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "41",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "21",
        "inputVector": "",
        "url": "https://frodo.douban.com/frodo_rexxar/api/routes?timezone=Asia%2FShanghai&device_id=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&sugar=0&loc_id=128120&_sig=qx%2BGFkZB5L1HLycYAlxvnV9NcRo%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "42",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "43",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "44",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=bPj3kySjQ80\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "45",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nartery.douban.com\nbid=x29AOpOwZAE\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "46",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "47",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "48",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "29",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/update_agreement?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "49",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "50",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "36",
        "inputVector": "",
        "url": "https://artery.douban.com/api/android_notification_status?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "51",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "pSdntxfLQl4",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "52",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "53",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "54",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=pSdntxfLQl4\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "55",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "56",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "57",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "2033284771, which evaluates to: 2034-06-07 17:19:31",
        "method": "GET",
        "evidence": "2033284771",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "58",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1562815369, which evaluates to: 2019-07-11 11:22:49",
        "method": "GET",
        "evidence": "1562815369",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "60",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "1722394594, which evaluates to: 2024-07-31 10:56:34",
        "method": "GET",
        "evidence": "1722394594",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "39",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/feature_switch?width=1600&height=2560&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=GCuiQuovhaZvbikOCVhT%2Bkpji%2Fs%3D&_ts=1722424615",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "61",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:XSRF-TOKEN",
        "method": "POST",
        "evidence": "b7c7de3a-a107-46d9-81f6-2ec7de905ea7",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "40",
        "inputVector": "",
        "url": "https://utoken.umeng.com/anti/updateZdata",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "XSRF-TOKEN",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "62",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "43",
        "inputVector": "",
        "url": "https://sdk-config.tanx.com/requestConfigV2",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "63",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: XSRF-TOKEN",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "40",
        "inputVector": "",
        "url": "https://utoken.umeng.com/anti/updateZdata",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "XSRF-TOKEN",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "64",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "max-age=0",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).",
        "messageId": "43",
        "inputVector": "",
        "url": "https://sdk-config.tanx.com/requestConfigV2",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://datatracker.ietf.org/doc/html/rfc6797#section-6.2",
        "solution": "Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.",
        "alert": "Strict-Transport-Security Disabled",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Disabled",
        "risk": "Low",
        "id": "65",
        "alertRef": "10035-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: XSRF-TOKEN",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "40",
        "inputVector": "",
        "url": "https://utoken.umeng.com/anti/updateZdata",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "XSRF-TOKEN",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "66",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "43",
        "inputVector": "",
        "url": "https://sdk-config.tanx.com/requestConfigV2",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "67",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "40",
        "inputVector": "",
        "url": "https://utoken.umeng.com/anti/updateZdata",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "68",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "45",
        "inputVector": "",
        "url": "https://dns.alidns.com/dns-query",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "69",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "45",
        "inputVector": "",
        "url": "https://dns.alidns.com/dns-query",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "71",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:ttreq_tob",
        "method": "POST",
        "evidence": "1$24fcaa374ba03ff0f5e981dce74d3d352a5b9cbb",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "ttreq_tob",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "72",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=31536000",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "73",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "D1ItgEmQpNg",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "74",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "75",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "76",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "77",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: ttreq_tob",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "ttreq_tob",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "78",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "HIT TCP_HIT dirn:1:652499738",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "79",
        "alertRef": "10050-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "80",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "81",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \ntoblog.ctobsnssdk.com\nttreq_tob=\"1$24fcaa374ba03ff0f5e981dce74d3d352a5b9cbb\";$Path=\"/\";$Domain=\"ctobsnssdk.com\"\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "82",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "83",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "Txgvzz2exhY",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "84",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=604800",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "85",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: ttreq_tob",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "ttreq_tob",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "86",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "1718722137, which evaluates to: 2024-06-18 22:48:57",
        "method": "GET",
        "evidence": "1718722137",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ali-Swift-Global-Savetime",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "87",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "88",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "89",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "90",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: ttreq_tob",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "ttreq_tob",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "91",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "49",
        "inputVector": "",
        "url": "https://lf-cdn-tos.bytescm.com/obj/static/ad/play-comp/playable-component-sdk/package.ugen.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "92",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \namonsul.douban.com\nbid=D1ItgEmQpNg\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "93",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "KqWjdF3vmBY",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "94",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "70",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/event",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "95",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \napi.douban.com\nbid=Txgvzz2exhY\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "96",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "HIT TCP_HIT dirn:12:449692968",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "97",
        "alertRef": "10050-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "98",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "99",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "70",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/event",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "100",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "101",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "102",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "103",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "1722424616, which evaluates to: 2024-07-31 19:16:56",
        "method": "POST",
        "evidence": "1722424616",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "104",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "105",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "74",
        "inputVector": "",
        "url": "https://dsp-x.jd.com/adx/sdk",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "106",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "70",
        "inputVector": "",
        "url": "https://sdk.e.qq.com/event",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "107",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "108",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "N8ho9X1jFDU",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "109",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "1721905690, which evaluates to: 2024-07-25 19:08:10",
        "method": "GET",
        "evidence": "1721905690",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ali-Swift-Global-Savetime",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "110",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "111",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "50",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/device_register_only/?aid=164362&tt_info=dGMDBAABPI7VaqDL0DJmMNLSKJfc0Db3e02s8qhF3eNa4DJQcODEiLz3-xHv1t2DpC4lDBHL6qXo%0AtBBmjbbFTE7Beoz0DMKpuTxmx-RC2R3zr67SUWzdkOF-NoEU3hN9gj7RipJhKI4jKjcjKqlz-QWC%0AMZTrzCP4gy976srRMY9kayt4MwObj1O7wTLDEz32XaGZ_Vx-0hNNPxrJJK1daDLseQqkdJDVkL59%0AKWoNZDS9PhI5J9J_Jd2Vv52tsd3Hg3TG7DInzQv8yoRUWYPkiV5X_CvOgYATUOEtIh4hpXUpJkXf%0A_pgmywz1F06Yf4qCG-67qcQko5gxgTU8ndlAjRuzP12AFSq8miXCfVXa9EPBPbxcLWvd6PtQRvZU%0AFCSjmw6b6ZTacQN9Ph8ybDqTZTO8ZqGbLnCe3IzZmY7XFVpi_rNq128hnJ1_CvC2DjkzWM38jCDs%0A",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "112",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "POST",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "113",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=KqWjdF3vmBY\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "114",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "115",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "51",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_show",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "116",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "65",
        "inputVector": "",
        "url": "https://sf3-fe-tos.pglstatp-toutiao.com/obj/ad-pattern/renderer/package.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "117",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "47",
        "inputVector": "",
        "url": "https://amonsul.douban.com/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "118",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "119",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "120",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "79",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/app_log/?version_code=292&device_platform=android&aid=164362",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "122",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "HEAD",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://mi.gdt.qq.com/gdt_mview.fcg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "124",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "71",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/home_tab_pos?last_visit_id=&last_tab_pos=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=lLjfI3yojZe2mww0KUWkBkcYZTI%3D&_ts=1722424616",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "125",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=N8ho9X1jFDU\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "126",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "79",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/app_log/?version_code=292&device_platform=android&aid=164362",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "128",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "private, no-cache, must-revalidate, max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "84",
        "inputVector": "",
        "url": "https://rpt.gdt.qq.com/sdk_track",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "129",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "no-cache",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "86",
        "inputVector": "",
        "url": "https://opehs.tanx.com/japi?id=fce4c32c9fcf2134dbf9aad1ce236165",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "132",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "HEAD",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "80",
        "inputVector": "",
        "url": "https://mi.gdt.qq.com/gdt_mview.fcg",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "134",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "135",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "1722424616, which evaluates to: 2024-07-31 19:16:56",
        "method": "POST",
        "evidence": "1722424616",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "79",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/app_log/?version_code=292&device_platform=android&aid=164362",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "138",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "82",
        "inputVector": "",
        "url": "https://rpt.gdt.qq.com/sdk_track",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "139",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "max-age=0",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).",
        "messageId": "86",
        "inputVector": "",
        "url": "https://opehs.tanx.com/japi?id=fce4c32c9fcf2134dbf9aad1ce236165",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://datatracker.ietf.org/doc/html/rfc6797#section-6.2",
        "solution": "Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.",
        "alert": "Strict-Transport-Security Disabled",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Disabled",
        "risk": "Low",
        "id": "142",
        "alertRef": "10035-2"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "q4PSiTkKZwc",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "144",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "73",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/search/found_words?screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "145",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "79",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/app_log/?version_code=292&device_platform=android&aid=164362",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "148",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "82",
        "inputVector": "",
        "url": "https://rpt.gdt.qq.com/sdk_track",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "149",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "1722424617, which evaluates to: 2024-07-31 19:16:57",
        "method": "POST",
        "evidence": "1722424617",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "85",
        "inputVector": "",
        "url": "https://toblog.ctobsnssdk.com/service/2/app_log/?version_code=292&device_platform=android&aid=164362",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "151",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "86",
        "inputVector": "",
        "url": "https://opehs.tanx.com/japi?id=fce4c32c9fcf2134dbf9aad1ce236165",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "153",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "154",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "156",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "94",
        "inputVector": "",
        "url": "https://ulogs.umeng.com/unify_logs",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "157",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=q4PSiTkKZwc\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "162",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "101",
        "inputVector": "",
        "url": "https://pgdt.ugdtimg.com/141/20204/snscosdownload/SH/reserved/6683e2e0000d262220199c6da806bd1e0000008d00004eec?m=237e29311fb8beb9d8f61cd8526656c8&ck=237e29311fb8beb9d8f61cd8526656c8&sha256=2d470d4866f6db7a3c3aa76949af64197aeefdac85bca529513471ca7788dcfa&imageView2/format/avif",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "164",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "94",
        "inputVector": "",
        "url": "https://ulogs.umeng.com/unify_logs",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "165",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "168",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "AmJ9lVVXtkY",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "170",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 2251560",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "101",
        "inputVector": "",
        "url": "https://pgdt.ugdtimg.com/141/20204/snscosdownload/SH/reserved/6683e2e0000d262220199c6da806bd1e0000008d00004eec?m=237e29311fb8beb9d8f61cd8526656c8&ck=237e29311fb8beb9d8f61cd8526656c8&sha256=2d470d4866f6db7a3c3aa76949af64197aeefdac85bca529513471ca7788dcfa&imageView2/format/avif",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "174",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "max-age=0",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).",
        "messageId": "110",
        "inputVector": "",
        "url": "https://et.tanx.com/tsbpm?id=fce4c32c9fcf2134dbf9aad1ce236165",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://datatracker.ietf.org/doc/html/rfc6797#section-6.2",
        "solution": "Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.",
        "alert": "Strict-Transport-Security Disabled",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Disabled",
        "risk": "Low",
        "id": "175",
        "alertRef": "10035-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "93",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_ads?apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=7zh%2FzfoIwOfCF2UUf3DIbxoL8To%3D&_ts=1722424617",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "177",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "178",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=0",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).",
        "messageId": "114",
        "inputVector": "",
        "url": "https://df.tanx.com/winnotice2?e=R_G2Ur2wlLcPyT3bbKCYYyqoeur8vzh-S_T0tyJ3arFslLKu8tGEHNFJhR3Iak6_w307G_rj6Qq7yIQOHYZzQm64zlafVDTcigQjKjwiE2_8MvuB6VOZgSm0g58Lf-ejmSe1Mphou5KBJKmTQ9oxuUnE3UdUO9ZnGKAq7e0fpOsfhNfL6AM9pmukKWxc_sCFEhDdhm1A9LW2fEY8CaMRow&k=215&i=mm_26632256_15292089_114452150037&r=b1a21fc3b0824c33974a3f22d524fb91-1722424615",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://datatracker.ietf.org/doc/html/rfc6797#section-6.2",
        "solution": "Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security with an appropriate max-age value.",
        "alert": "Strict-Transport-Security Disabled",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Disabled",
        "risk": "Low",
        "id": "181",
        "alertRef": "10035-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://mssdk.volces.com/ri/report_otob?lc_id=1383241963&platform=android&device_platform=android&sdk_ver=v07.01.00-ml-android&sdk_ver_code=117506048&app_ver=7.77.0&version_code=292&aid=&sdkid=1371&subaid=5003519&iid=&did=&bd_did=&client_type=business&region_type=ml&mode=2",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "182",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://pgdt.ugdtimg.com/141/20204/snscosdownload/SH/reserved/6683e2e0000d262220199c6da806bd1e0000008d00004eec?m=237e29311fb8beb9d8f61cd8526656c8&ck=237e29311fb8beb9d8f61cd8526656c8&sha256=2d470d4866f6db7a3c3aa76949af64197aeefdac85bca529513471ca7788dcfa&imageView2/format/avif",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "183",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "110",
        "inputVector": "",
        "url": "https://et.tanx.com/tsbpm?id=fce4c32c9fcf2134dbf9aad1ce236165",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "184",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \napi.douban.com\nbid=AmJ9lVVXtkY\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "185",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "114",
        "inputVector": "",
        "url": "https://df.tanx.com/winnotice2?e=R_G2Ur2wlLcPyT3bbKCYYyqoeur8vzh-S_T0tyJ3arFslLKu8tGEHNFJhR3Iak6_w307G_rj6Qq7yIQOHYZzQm64zlafVDTcigQjKjwiE2_8MvuB6VOZgSm0g58Lf-ejmSe1Mphou5KBJKmTQ9oxuUnE3UdUO9ZnGKAq7e0fpOsfhNfL6AM9pmukKWxc_sCFEhDdhm1A9LW2fEY8CaMRow&k=215&i=mm_26632256_15292089_114452150037&r=b1a21fc3b0824c33974a3f22d524fb91-1722424615",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "187",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://mssdk.volces.com/ri/report_otob?lc_id=1383241963&platform=android&device_platform=android&sdk_ver=v07.01.00-ml-android&sdk_ver_code=117506048&app_ver=7.77.0&version_code=292&aid=&sdkid=1371&subaid=5003519&iid=&did=&bd_did=&client_type=business&region_type=ml&mode=2",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "188",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "101",
        "inputVector": "",
        "url": "https://pgdt.ugdtimg.com/141/20204/snscosdownload/SH/reserved/6683e2e0000d262220199c6da806bd1e0000008d00004eec?m=237e29311fb8beb9d8f61cd8526656c8&ck=237e29311fb8beb9d8f61cd8526656c8&sha256=2d470d4866f6db7a3c3aa76949af64197aeefdac85bca529513471ca7788dcfa&imageView2/format/avif",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "189",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "190",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "113",
        "inputVector": "",
        "url": "https://mssdk.volces.com/ri/report_otob?lc_id=1383241963&platform=android&device_platform=android&sdk_ver=v07.01.00-ml-android&sdk_ver_code=117506048&app_ver=7.77.0&version_code=292&aid=&sdkid=1371&subaid=5003519&iid=&did=&bd_did=&client_type=business&region_type=ml&mode=2",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "193",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "194",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "102",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_bid",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "195",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "rTSk1pmXGoI",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "196",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "hbWUmIBkW7I",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "197",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "198",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "199",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "200",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "201",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=rTSk1pmXGoI\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "202",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=hbWUmIBkW7I\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "203",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "204",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "205",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "120",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=3&tab=follow&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "206",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "121",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/home_banner?count=1&tab=rec&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=A%2FAztK8qYxpWPQeh7QxW6g0YQbU%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "207",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "vqBwcPTJoxM",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "208",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "209",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "HIT TCP_HIT dirn:10:168720218",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "125",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p656893512.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "210",
        "alertRef": "10050-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "211",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p656893512.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "212",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1721792779, which evaluates to: 2024-07-24 11:46:19",
        "method": "GET",
        "evidence": "1721792779",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "125",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p656893512.webp",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ali-Swift-Global-Savetime",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "213",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=vqBwcPTJoxM\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "214",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "215",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "125",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p656893512.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "216",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "217",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "1656578175, which evaluates to: 2022-06-30 16:36:15",
        "method": "GET",
        "evidence": "1656578175",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "122",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/minstrel/story/home?count=15&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai&_sig=B56BPNax33MHZChBZVUYku7f5c8%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "218",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 634079",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "131",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p656893511.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "219",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p656893511.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "220",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "131",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p656893511.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "221",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "HIT TCP_HIT dirn:9:196883707",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "138",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657094102.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "222",
        "alertRef": "10050-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "1nblc_ZVAdE",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "223",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "138",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657094102.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "224",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1721984116, which evaluates to: 2024-07-26 16:55:16",
        "method": "GET",
        "evidence": "1721984116",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "138",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657094102.webp",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ali-Swift-Global-Savetime",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "225",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "226",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: ll",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "ll",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "227",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "138",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657094102.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "228",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://knicks.jd.com/log/server?t=ja2021_7123928&v=%7B%22timestamp%22:%221722424619846%22,%22sdkType%22:%22union%22,%22sdkVer%22:%22union_3.2.0_20210910%22,%22appKey%22:%22430a42244e9442875d620100d2297fc9%22,%22androidId%22:%22%22,%22oaid%22:%22b6cee8d822fa9e8a%22,%22os%22:%22android%22,%22appVer%22:%227.77.0_292%22,%22appPackage%22:%22com.douban.frodo%22,%22androidVer%22:%2211%22,%22deviceModel%22:%22Xiaomi_21051182C%22,%22eventId%22:%22unionsdk_init_success%22,%22url%22:%22%22,%22scheme%22:%22%22,%22hasJD%22:0,%22hasJX%22:0,%22info%22:%22%22%7D",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "230",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://errnewlog.umeng.com/apm_cc",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "231",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "232",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "141",
        "inputVector": "",
        "url": "https://knicks.jd.com/log/server?t=ja2021_7123928&v=%7B%22timestamp%22:%221722424619846%22,%22sdkType%22:%22union%22,%22sdkVer%22:%22union_3.2.0_20210910%22,%22appKey%22:%22430a42244e9442875d620100d2297fc9%22,%22androidId%22:%22%22,%22oaid%22:%22b6cee8d822fa9e8a%22,%22os%22:%22android%22,%22appVer%22:%227.77.0_292%22,%22appPackage%22:%22com.douban.frodo%22,%22androidVer%22:%2211%22,%22deviceModel%22:%22Xiaomi_21051182C%22,%22eventId%22:%22unionsdk_init_success%22,%22url%22:%22%22,%22scheme%22:%22%22,%22hasJD%22:0,%22hasJX%22:0,%22info%22:%22%22%7D",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "234",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://errnewlog.umeng.com/apm_cc",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "235",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nll=118267\nbid=1nblc_ZVAdE\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "236",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "1722424619, which evaluates to: 2024-07-31 19:16:59",
        "method": "POST",
        "evidence": "1722424619",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "139",
        "inputVector": "",
        "url": "https://errnewlog.umeng.com/apm_cc",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "237",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: ll",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "ll",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "238",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 440588",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "143",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p657094131.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "240",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "1702451185, which evaluates to: 2023-12-13 15:06:25",
        "method": "POST",
        "evidence": "1702451185",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "139",
        "inputVector": "",
        "url": "https://errnewlog.umeng.com/apm_cc",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "241",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "242",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p657094131.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "244",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "139",
        "inputVector": "",
        "url": "https://errnewlog.umeng.com/apm_cc",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "245",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: ll",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "ll",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "246",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "143",
        "inputVector": "",
        "url": "https://img2.doubanio.com/view/group_topic/l/public/p657094131.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "248",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "HIT TCP_HIT dirn:11:135101533",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "151",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657377702.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "251",
        "alertRef": "10050-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "152",
        "inputVector": "",
        "url": "https://kepler.jd.com/console/admin/getConfigNew?kepler_version=union_3.2.0_20210910&kepler_appversion=7.77.0_292&kepler_token=&kepler_os=android&oaid=b6cee8d822fa9e8a&androidId=&kepler_osversion=11&kepler_appkey=430a42244e9442875d620100d2297fc9&kepler_devicemodel=Xiaomi_21051182C&configid=android_new",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "252",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "137",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/elendil/recommend_feed?start=0&count=20&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ab7w0Xe8JUdo1DI9fX6e8hSUnQc%3D&_ts=1722424618",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "253",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 354178",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "155",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182166.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "254",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 354178",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "154",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182164.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "255",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "151",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657377702.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "256",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The URL contains potentially sensitive information. The following string was found via the pattern: token\nkepler_token",
        "method": "GET",
        "evidence": "kepler_token",
        "pluginId": "10024",
        "cweid": "200",
        "confidence": "Medium",
        "wascid": "13",
        "description": "The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.",
        "messageId": "152",
        "inputVector": "",
        "url": "https://kepler.jd.com/console/admin/getConfigNew?kepler_version=union_3.2.0_20210910&kepler_appversion=7.77.0_292&kepler_token=&kepler_os=android&oaid=b6cee8d822fa9e8a&androidId=&kepler_osversion=11&kepler_appkey=430a42244e9442875d620100d2297fc9&kepler_devicemodel=Xiaomi_21051182C&configid=android_new",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "",
        "solution": "\u4e0d\u8981\u5728URIs\u4e2d\u4f20\u9012\u654f\u611f\u4fe1\u606f\u3002",
        "alert": "Information Disclosure - Sensitive Information in URL",
        "param": "kepler_token",
        "attack": "",
        "name": "Information Disclosure - Sensitive Information in URL",
        "risk": "Informational",
        "id": "257",
        "alertRef": "10024"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "155",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182166.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "258",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 141084",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "165",
        "inputVector": "",
        "url": "https://img1.doubanio.com/view/group/sqxs/public/54f86d5c46efe6b.webp",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "260",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "154",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182164.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "261",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1722271525, which evaluates to: 2024-07-30 00:45:25",
        "method": "GET",
        "evidence": "1722271525",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "151",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657377702.webp",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ali-Swift-Global-Savetime",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "262",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "152",
        "inputVector": "",
        "url": "https://kepler.jd.com/console/admin/getConfigNew?kepler_version=union_3.2.0_20210910&kepler_appversion=7.77.0_292&kepler_token=&kepler_os=android&oaid=b6cee8d822fa9e8a&androidId=&kepler_osversion=11&kepler_appkey=430a42244e9442875d620100d2297fc9&kepler_devicemodel=Xiaomi_21051182C&configid=android_new",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "263",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "155",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182166.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "264",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "marco/3.1",
        "pluginId": "10036",
        "cweid": "200",
        "confidence": "High",
        "wascid": "13",
        "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://img1.doubanio.com/view/group/sqxs/public/54f86d5c46efe6b.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html",
            "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttps://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)\nhttps://www.troyhunt.com/shhh-dont-let-your-response-headers/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.",
        "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "param": "",
        "attack": "",
        "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "risk": "Low",
        "id": "265",
        "alertRef": "10036"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "154",
        "inputVector": "",
        "url": "https://img9.doubanio.com/view/group_topic/l/public/p657182164.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "266",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "151",
        "inputVector": "",
        "url": "https://img3.doubanio.com/view/group_topic/l/public/p657377702.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "267",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10020",
        "cweid": "1021",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The response does not include either Content-Security-Policy with 'frame-ancestors' directive or X-Frame-Options to protect against 'ClickJacking' attacks.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-1021": "https://cwe.mitre.org/data/definitions/1021.html",
            "WSTG-v42-CLNT-09": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/11-Client-side_Testing/09-Testing_for_Clickjacking",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
        "solution": "Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.\nIf you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's \"frame-ancestors\" directive.",
        "alert": "Missing Anti-clickjacking Header",
        "param": "x-frame-options",
        "attack": "",
        "name": "Missing Anti-clickjacking Header",
        "risk": "Medium",
        "id": "268",
        "alertRef": "10020-1"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "e8P8NAcGb7g",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "269",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://img1.doubanio.com/view/group/sqxs/public/54f86d5c46efe6b.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "270",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "max-age=300",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "271",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "165",
        "inputVector": "",
        "url": "https://img1.doubanio.com/view/group/sqxs/public/54f86d5c46efe6b.webp",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "272",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "273",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10038",
        "cweid": "693",
        "confidence": "High",
        "wascid": "15",
        "description": "Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps://www.w3.org/TR/CSP/\nhttps://w3c.github.io/webappsec-csp/\nhttps://web.dev/articles/csp\nhttps://caniuse.com/#feat=contentsecuritypolicy\nhttps://content-security-policy.com/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.",
        "alert": "Content Security Policy (CSP) Header Not Set",
        "param": "",
        "attack": "",
        "name": "Content Security Policy (CSP) Header Not Set",
        "risk": "Medium",
        "id": "274",
        "alertRef": "10038-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "275",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "GET",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "276",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nfrodo.douban.com\nbid=e8P8NAcGb7g\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "277",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "<script src=\"//commonst.360buyimg.com/ksdk/jdkeplerjsbridge.js?v=20220412\"></script>",
        "pluginId": "10017",
        "cweid": "829",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The page includes one or more script files from a third-party domain.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "CWE-829": "https://cwe.mitre.org/data/definitions/829.html"
        },
        "reference": "",
        "solution": "Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.",
        "alert": "Cross-Domain JavaScript Source File Inclusion",
        "param": "//commonst.360buyimg.com/ksdk/jdkeplerjsbridge.js?v=20220412",
        "attack": "",
        "name": "Cross-Domain JavaScript Source File Inclusion",
        "risk": "Low",
        "id": "278",
        "alertRef": "10017"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "279",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "The following pattern was used: \\bUSERNAME\\b and was detected in the element starting with: \"<script type=\"text/javascript\">\r\n        !function(t,e){\"function\"==typeof define&&define.amd?define(function(){return e(t)}):e(\", see evidence field for the suspicious comment/snippet.",
        "method": "GET",
        "evidence": "username",
        "pluginId": "10027",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-INFO-05": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/05-Review_Webpage_Content_for_Information_Leakage",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "",
        "solution": "Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.",
        "alert": "Information Disclosure - Suspicious Comments",
        "param": "",
        "attack": "",
        "name": "Information Disclosure - Suspicious Comments",
        "risk": "Informational",
        "id": "280",
        "alertRef": "10027"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "281",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "max-age=0",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "179",
        "inputVector": "",
        "url": "https://mapi.m.jd.com/ksdk/updlist.json",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "282",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "No links have been found while there are scripts, which is an indication that this is a modern web application.",
        "method": "GET",
        "evidence": "<script type=\"text/javascript\">\r\n        !function(t,e){\"function\"==typeof define&&define.amd?define(function(){return e(t)}):e(t)}(this,function(t){var e=function(){function $(t){return null==t?String(t):S[C.call(t)]||\"object\"}function F(t){return\"function\"==$(t)}function k(t){return null!=t&&t==t.window}function M(t){return null!=t&&t.nodeType==t.DOCUMENT_NODE}function R(t){return\"object\"==$(t)}function Z(t){return R(t)&&!k(t)&&Object.getPrototypeOf(t)==Object.prototype}function z(t){var e=!!t&&\"length\"in t&&t.length,n=r.type(t);return\"function\"!=n&&!k(t)&&(\"array\"==n||0===e||\"number\"==typeof e&&e>0&&e-1 in t)}function q(t){return a.call(t,function(t){return null!=t})}function H(t){return t.length>0?r.fn.concat.apply([],t):t}function I(t){return t.replace(/::/g,\"/\").replace(/([A-Z]+)([A-Z][a-z])/g,\"$1_$2\").replace(/([a-z\\d])([A-Z])/g,\"$1_$2\").replace(/_/g,\"-\").toLowerCase()}function V(t){return t in l?l[t]:l[t]=new RegExp(\"(^|\\\\s)\"+t+\"(\\\\s|$)\")}function _(t,e){return\"number\"!=typeof e||h[I(t)]?e:e+\"px\"}function B(t){var e,n;return c[t]||(e=f.createElement(t),f.body.appendChild(e),n=getComputedStyle(e,\"\").getPropertyValue(\"display\"),e.parentNode.removeChild(e),\"none\"==n&&(n=\"block\"),c[t]=n),c[t]}function U(t){return\"children\"in t?u.call(t.children):r.map(t.childNodes,function(t){return 1==t.nodeType?t:void 0})}function X(t,e){var n,r=t?t.length:0;for(n=0;r>n;n++)this[n]=t[n];this.length=r,this.selector=e||\"\"}function J(t,r,i){for(n in r)i&&(Z(r[n])||L(r[n]))?(Z(r[n])&&!Z(t[n])&&(t[n]={}),L(r[n])&&!L(t[n])&&(t[n]=[]),J(t[n],r[n],i)):r[n]!==e&&(t[n]=r[n])}function W(t,e){return null==e?r(t):r(t).filter(e)}function Y(t,e,n,r){return F(e)?e.call(t,n,r):e}function G(t,e,n){null==n?t.removeAttribute(e):t.setAttribute(e,n)}function K(t,n){var r=t.className||\"\",i=r&&r.baseVal!==e;return n===e?i?r.baseVal:r:void(i?r.baseVal=n:t.className=n)}function Q(t){try{return t?\"true\"==t||(\"false\"==t?!1:\"null\"==t?null:+t+\"\"==t?+t:/^[\\[\\{]/.test(t)?r.parseJSON(t):t):t}catch(e){return t}}function tt(t,e){e(t);for(var n=0,r=t.childNodes.length;r>n;n++)tt(t.childNodes[n],e)}var e,n,r,i,O,P,o=[],s=o.concat,a=o.filter,u=o.slice,f=t.document,c={},l={},h={\"column-count\":1,columns:1,\"font-weight\":1,\"line-height\":1,opacity:1,\"z-index\":1,zoom:1},p=/^\\s*<(\\w+|!)[^>]*>/,d=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,m=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,g=/^(?:body|html)$/i,v=/([A-Z])/g,y=[\"val\",\"css\",\"html\",\"text\",\"data\",\"width\",\"height\",\"offset\"],x=[\"after\",\"prepend\",\"before\",\"append\"],b=f.createElement(\"table\"),E=f.createElement(\"tr\"),j={tr:f.createElement(\"tbody\"),tbody:b,thead:b,tfoot:b,td:E,th:E,\"*\":f.createElement(\"div\")},w=/complete|loaded|interactive/,T=/^[\\w-]*$/,S={},C=S.toString,N={},A=f.createElement(\"div\"),D={tabindex:\"tabIndex\",readonly:\"readOnly\",\"for\":\"htmlFor\",\"class\":\"className\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",cellpadding:\"cellPadding\",rowspan:\"rowSpan\",colspan:\"colSpan\",usemap:\"useMap\",frameborder:\"frameBorder\",contenteditable:\"contentEditable\"},L=Array.isArray||function(t){return t instanceof Array};return N.matches=function(t,e){if(!e||!t||1!==t.nodeType)return!1;var n=t.matches||t.webkitMatchesSelector||t.mozMatchesSelector||t.oMatchesSelector||t.matchesSelector;if(n)return n.call(t,e);var r,i=t.parentNode,o=!i;return o&&(i=A).appendChild(t),r=~N.qsa(i,e).indexOf(t),o&&A.removeChild(t),r},O=function(t){return t.replace(/-+(.)?/g,function(t,e){return e?e.toUpperCase():\"\"})},P=function(t){return a.call(t,function(e,n){return t.indexOf(e)==n})},N.fragment=function(t,n,i){var o,s,a;return d.test(t)&&(o=r(f.createElement(RegExp.$1))),o||(t.replace&&(t=t.replace(m,\"<$1></$2>\")),n===e&&(n=p.test(t)&&RegExp.$1),n in j||(n=\"*\"),a=j[n],a.innerHTML=\"\"+t,o=r.each(u.call(a.childNodes),function(){a.removeChild(this)})),Z(i)&&(s=r(o),r.each(i,function(t,e){y.indexOf(t)>-1?s[t](e):s.attr(t,e)})),o},N.Z=function(t,e){return new X(t,e)},N.isZ=function(t){return t instanceof N.Z},N.init=function(t,n){var i;if(!t)return N.Z();if(\"string\"==typeof t)if(t=t.trim(),\"<\"==t[0]&&p.test(t))i=N.fragment(t,RegExp.$1,n),t=null;else{if(n!==e)return r(n).find(t);i=N.qsa(f,t)}else{if(F(t))return r(f).ready(t);if(N.isZ(t))return t;if(L(t))i=q(t);else if(R(t))i=[t],t=null;else if(p.test(t))i=N.fragment(t.trim(),RegExp.$1,n),t=null;else{if(n!==e)return r(n).find(t);i=N.qsa(f,t)}}return N.Z(i,t)},r=function(t,e){return N.init(t,e)},r.extend=function(t){var e,n=u.call(arguments,1);return\"boolean\"==typeof t&&(e=t,t=n.shift()),n.forEach(function(n){J(t,n,e)}),t},N.qsa=function(t,e){var n,r=\"#\"==e[0],i=!r&&\".\"==e[0],o=r||i?e.slice(1):e,s=T.test(o);return t.getElementById&&s&&r?(n=t.getElementById(o))?[n]:[]:1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType?[]:u.call(s&&!r&&t.getElementsByClassName?i?t.getElementsByClassName(o):t.getElementsByTagName(e):t.querySelectorAll(e))},r.contains=f.documentElement.contains?function(t,e){return t!==e&&t.contains(e)}:function(t,e){for(;e&&(e=e.parentNode);)if(e===t)return!0;return!1},r.type=$,r.isFunction=F,r.isWindow=k,r.isArray=L,r.isPlainObject=Z,r.isEmptyObject=function(t){var e;for(e in t)return!1;return!0},r.isNumeric=function(t){var e=Number(t),n=typeof t;return null!=t&&\"boolean\"!=n&&(\"string\"!=n||t.length)&&!isNaN(e)&&isFinite(e)||!1},r.inArray=function(t,e,n){return o.indexOf.call(e,t,n)},r.camelCase=O,r.trim=function(t){return null==t?\"\":String.prototype.trim.call(t)},r.uuid=0,r.support={},r.expr={},r.noop=function(){},r.map=function(t,e){var n,i,o,r=[];if(z(t))for(i=0;i<t.length;i++)n=e(t[i],i),null!=n&&r.push(n);else for(o in t)n=e(t[o],o),null!=n&&r.push(n);return H(r)},r.each=function(t,e){var n,r;if(z(t)){for(n=0;n<t.length;n++)if(e.call(t[n],n,t[n])===!1)return t}else for(r in t)if(e.call(t[r],r,t[r])===!1)return t;return t},r.grep=function(t,e){return a.call(t,e)},t.JSON&&(r.parseJSON=JSON.parse),r.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(t,e){S[\"[object \"+e+\"]\"]=e.toLowerCase()}),r.fn={constructor:N.Z,length:0,forEach:o.forEach,reduce:o.reduce,push:o.push,sort:o.sort,splice:o.splice,indexOf:o.indexOf,concat:function(){var t,e,n=[];for(t=0;t<arguments.length;t++)e=arguments[t],n[t]=N.isZ(e)?e.toArray():e;return s.apply(N.isZ(this)?this.toArray():this,n)},map:function(t){return r(r.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return r(u.apply(this,arguments))},ready:function(t){return w.test(f.readyState)&&f.body?t(r):f.addEventListener(\"DOMContentLoaded\",function(){t(r)},!1),this},get:function(t){return t===e?u.call(this):this[t>=0?t:t+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){null!=this.parentNode&&this.parentNode.removeChild(this)})},each:function(t){return o.every.call(this,function(e,n){return t.call(e,n,e)!==!1}),this},filter:function(t){return F(t)?this.not(this.not(t)):r(a.call(this,function(e){return N.matches(e,t)}))},add:function(t,e){return r(P(this.concat(r(t,e))))},is:function(t){return this.length>0&&N.matches(this[0],t)},not:function(t){var n=[];if(F(t)&&t.call!==e)this.each(function(e){t.call(this,e)||n.push(this)});else{var i=\"string\"==typeof t?this.filter(t):z(t)&&F(t.item)?u.call(t):r(t);this.forEach(function(t){i.indexOf(t)<0&&n.push(t)})}return r(n)},has:function(t){return this.filter(function(){return R(t)?r.contains(this,t):r(this).find(t).size()})},eq:function(t){return-1===t?this.slice(t):this.slice(t,+t+1)},first:function(){var t=this[0];return t&&!R(t)?t:r(t)},last:function(){var t=this[this.length-1];return t&&!R(t)?t:r(t)},find:function(t){var e,n=this;return e=t?\"object\"==typeof t?r(t).filter(function(){var t=this;return o.some.call(n,function(e){return r.contains(e,t)})}):1==this.length?r(N.qsa(this[0],t)):this.map(function(){return N.qsa(this,t)}):r()},closest:function(t,e){var n=[],i=\"object\"==typeof t&&r(t);return this.each(function(r,o){for(;o&&!(i?i.indexOf(o)>=0:N.matches(o,t));)o=o!==e&&!M(o)&&o.parentNode;o&&n.indexOf(o)<0&&n.push(o)}),r(n)},parents:function(t){for(var e=[],n=this;n.length>0;)n=r.map(n,function(t){return(t=t.parentNode)&&!M(t)&&e.indexOf(t)<0?(e.push(t),t):void 0});return W(e,t)},parent:function(t){return W(P(this.pluck(\"parentNode\")),t)},children:function(t){return W(this.map(function(){return U(this)}),t)},contents:function(){return this.map(function(){return this.contentDocument||u.call(this.childNodes)})},siblings:function(t){return W(this.map(function(t,e){return a.call(U(e.parentNode),function(t){return t!==e})}),t)},empty:function(){return this.each(function(){this.innerHTML=\"\"})},pluck:function(t){return r.map(this,function(e){return e[t]})},show:function(){return this.each(function(){\"none\"==this.style.display&&(this.style.display=\"\"),\"none\"==getComputedStyle(this,\"\").getPropertyValue(\"display\")&&(this.style.display=B(this.nodeName))})},replaceWith:function(t){return this.before(t).remove()},wrap:function(t){var e=F(t);if(this[0]&&!e)var n=r(t).get(0),i=n.parentNode||this.length>1;return this.each(function(o){r(this).wrapAll(e?t.call(this,o):i?n.cloneNode(!0):n)})},wrapAll:function(t){if(this[0]){r(this[0]).before(t=r(t));for(var e;(e=t.children()).length;)t=e.first();r(t).append(this)}return this},wrapInner:function(t){var e=F(t);return this.each(function(n){var i=r(this),o=i.contents(),s=e?t.call(this,n):t;o.length?o.wrapAll(s):i.append(s)})},unwrap:function(){return this.parent().each(function(){r(this).replaceWith(r(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css(\"display\",\"none\")},toggle:function(t){return this.each(function(){var n=r(this);(t===e?\"none\"==n.css(\"display\"):t)?n.show():n.hide()})},prev:function(t){return r(this.pluck(\"previousElementSibling\")).filter(t||\"*\")},next:function(t){return r(this.pluck(\"nextElementSibling\")).filter(t||\"*\")},html:function(t){return 0 in arguments?this.each(function(e){var n=this.innerHTML;r(this).empty().append(Y(this,t,e,n))}):0 in this?this[0].innerHTML:null},text:function(t){return 0 in arguments?this.each(function(e){var n=Y(this,t,e,this.textContent);this.textContent=null==n?\"\":\"\"+n}):0 in this?this.pluck(\"textContent\").join(\"\"):null},attr:function(t,r){var i;return\"string\"!=typeof t||1 in arguments?this.each(function(e){if(1===this.nodeType)if(R(t))for(n in t)G(this,n,t[n]);else G(this,t,Y(this,r,e,this.getAttribute(t)))}):0 in this&&1==this[0].nodeType&&null!=(i=this[0].getAttribute(t))?i:e},removeAttr:function(t){return this.each(function(){1===this.nodeType&&t.split(\" \").forEach(function(t){G(this,t)},this)})},prop:function(t,e){return t=D[t]||t,1 in arguments?this.each(function(n){this[t]=Y(this,e,n,this[t])}):this[0]&&this[0][t]},removeProp:function(t){return t=D[t]||t,this.each(function(){delete this[t]})},data:function(t,n){var r=\"data-\"+t.replace(v,\"-$1\").toLowerCase(),i=1 in arguments?this.attr(r,n):this.attr(r);return null!==i?Q(i):e},val:function(t){return 0 in arguments?(null==t&&(t=\"\"),this.each(function(e){this.value=Y(this,t,e,this.value)})):this[0]&&(this[0].multiple?r(this[0]).find(\"option\").filter(function(){return this.selected}).pluck(\"value\"):this[0].value)},offset:function(e){if(e)return this.each(function(t){var n=r(this),i=Y(this,e,t,n.offset()),o=n.offsetParent().offset(),s={top:i.top-o.top,left:i.left-o.left};\"static\"==n.css(\"position\")&&(s.position=\"relative\"),n.css(s)});if(!this.length)return null;if(f.documentElement!==this[0]&&!r.contains(f.documentElement,this[0]))return{top:0,left:0};var n=this[0].getBoundingClientRect();return{left:n.left+t.pageXOffset,top:n.top+t.pageYOffset,width:Math.round(n.width),height:Math.round(n.height)}},css:function(t,e){if(arguments.length<2){var i=this[0];if(\"string\"==typeof t){if(!i)return;return i.style[O(t)]||getComputedStyle(i,\"\").getPropertyValue(t)}if(L(t)){if(!i)return;var o={},s=getComputedStyle(i,\"\");return r.each(t,function(t,e){o[e]=i.style[O(e)]||s.getPropertyValue(e)}),o}}var a=\"\";if(\"string\"==$(t))e||0===e?a=I(t)+\":\"+_(t,e):this.each(function(){this.style.removeProperty(I(t))});else for(n in t)t[n]||0===t[n]?a+=I(n)+\":\"+_(n,t[n])+\";\":this.each(function(){this.style.removeProperty(I(n))});return this.each(function(){this.style.cssText+=\";\"+a})},index:function(t){return t?this.indexOf(r(t)[0]):this.parent().children().indexOf(this[0])},hasClass:function(t){return t?o.some.call(this,function(t){return this.test(K(t))},V(t)):!1},addClass:function(t){return t?this.each(function(e){if(\"className\"in this){i=[];var n=K(this),o=Y(this,t,e,n);o.split(/\\s+/g).forEach(function(t){r(this).hasClass(t)||i.push(t)},this),i.length&&K(this,n+(n?\" \":\"\")+i.join(\" \"))}}):this},removeClass:function(t){return this.each(function(n){if(\"className\"in this){if(t===e)return K(this,\"\");i=K(this),Y(this,t,n,i).split(/\\s+/g).forEach(function(t){i=i.replace(V(t),\" \")}),K(this,i.trim())}})},toggleClass:function(t,n){return t?this.each(function(i){var o=r(this),s=Y(this,t,i,K(this));s.split(/\\s+/g).forEach(function(t){(n===e?!o.hasClass(t):n)?o.addClass(t):o.removeClass(t)})}):this},scrollTop:function(t){if(this.length){var n=\"scrollTop\"in this[0];return t===e?n?this[0].scrollTop:this[0].pageYOffset:this.each(n?function(){this.scrollTop=t}:function(){this.scrollTo(this.scrollX,t)})}},scrollLeft:function(t){if(this.length){var n=\"scrollLeft\"in this[0];return t===e?n?this[0].scrollLeft:this[0].pageXOffset:this.each(n?function(){this.scrollLeft=t}:function(){this.scrollTo(t,this.scrollY)})}},position:function(){if(this.length){var t=this[0],e=this.offsetParent(),n=this.offset(),i=g.test(e[0].nodeName)?{top:0,left:0}:e.offset();return n.top-=parseFloat(r(t).css(\"margin-top\"))||0,n.left-=parseFloat(r(t).css(\"margin-left\"))||0,i.top+=parseFloat(r(e[0]).css(\"border-top-width\"))||0,i.left+=parseFloat(r(e[0]).css(\"border-left-width\"))||0,{top:n.top-i.top,left:n.left-i.left}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||f.body;t&&!g.test(t.nodeName)&&\"static\"==r(t).css(\"position\");)t=t.offsetParent;return t})}},r.fn.detach=r.fn.remove,[\"width\",\"height\"].forEach(function(t){var n=t.replace(/./,function(t){return t[0].toUpperCase()});r.fn[t]=function(i){var o,s=this[0];return i===e?k(s)?s[\"inner\"+n]:M(s)?s.documentElement[\"scroll\"+n]:(o=this.offset())&&o[t]:this.each(function(e){s=r(this),s.css(t,Y(this,i,e,s[t]()))})}}),x.forEach(function(n,i){var o=i%2;r.fn[n]=function(){var n,a,s=r.map(arguments,function(t){var i=[];return n=$(t),\"array\"==n?(t.forEach(function(t){return t.nodeType!==e?i.push(t):r.zepto.isZ(t)?i=i.concat(t.get()):void(i=i.concat(N.fragment(t)))}),i):\"object\"==n||null==t?t:N.fragment(t)}),u=this.length>1;return s.length<1?this:this.each(function(e,n){a=o?n:n.parentNode,n=0==i?n.nextSibling:1==i?n.firstChild:2==i?n:null;var c=r.contains(f.documentElement,a);s.forEach(function(e){if(u)e=e.cloneNode(!0);else if(!a)return r(e).remove();a.insertBefore(e,n),c&&tt(e,function(e){if(!(null==e.nodeName||\"SCRIPT\"!==e.nodeName.toUpperCase()||e.type&&\"text/javascript\"!==e.type||e.src)){var n=e.ownerDocument?e.ownerDocument.defaultView:t;n.eval.call(n,e.innerHTML)}})})})},r.fn[o?n+\"To\":\"insert\"+(i?\"Before\":\"After\")]=function(t){return r(t)[n](this),this}}),N.Z.prototype=X.prototype=r.fn,N.uniq=P,N.deserializeValue=Q,r.zepto=N,r}();return t.Zepto=e,void 0===t.$&&(t.$=e),function(e){function h(t){return t._zid||(t._zid=n++)}function p(t,e,n,r){if(e=d(e),e.ns)var i=m(e.ns);return(a[h(t)]||[]).filter(function(t){return t&&(!e.e||t.e==e.e)&&(!e.ns||i.test(t.ns))&&(!n||h(t.fn)===h(n))&&(!r||t.sel==r)})}function d(t){var e=(\"\"+t).split(\".\");return{e:e[0],ns:e.slice(1).sort().join(\" \")}}function m(t){return new RegExp(\"(?:^| )\"+t.replace(\" \",\" .* ?\")+\"(?: |$)\")}function g(t,e){return t.del&&!f&&t.e in c||!!e}function v(t){return l[t]||f&&c[t]||t}function y(t,n,i,o,s,u,f){var c=h(t),p=a[c]||(a[c]=[]);n.split(/\\s/).forEach(function(n){if(\"ready\"==n)return e(document).ready(i);var a=d(n);a.fn=i,a.sel=s,a.e in l&&(i=function(t){var n=t.relatedTarget;return!n||n!==this&&!e.contains(this,n)?a.fn.apply(this,arguments):void 0}),a.del=u;var c=u||i;a.proxy=function(e){if(e=T(e),!e.isImmediatePropagationStopped()){e.data=o;var n=c.apply(t,e._args==r?[e]:[e].concat(e._args));return n===!1&&(e.preventDefault(),e.stopPropagation()),n}},a.i=p.length,p.push(a),\"addEventListener\"in t&&t.addEventListener(v(a.e),a.proxy,g(a,f))})}function x(t,e,n,r,i){var o=h(t);(e||\"\").split(/\\s/).forEach(function(e){p(t,e,n,r).forEach(function(e){delete a[o][e.i],\"removeEventListener\"in t&&t.removeEventListener(v(e.e),e.proxy,g(e,i))})})}function T(t,n){return(n||!t.isDefaultPrevented)&&(n||(n=t),e.each(w,function(e,r){var i=n[e];t[e]=function(){return this[r]=b,i&&i.apply(n,arguments)},t[r]=E}),t.timeStamp||(t.timeStamp=Date.now()),(n.defaultPrevented!==r?n.defaultPrevented:\"returnValue\"in n?n.returnValue===!1:n.getPreventDefault&&n.getPreventDefault())&&(t.isDefaultPrevented=b)),t}function S(t){var e,n={originalEvent:t};for(e in t)j.test(e)||t[e]===r||(n[e]=t[e]);return T(n,t)}var r,n=1,i=Array.prototype.slice,o=e.isFunction,s=function(t){return\"string\"==typeof t},a={},u={},f=\"onfocusin\"in t,c={focus:\"focusin\",blur:\"focusout\"},l={mouseenter:\"mouseover\",mouseleave:\"mouseout\"};u.click=u.mousedown=u.mouseup=u.mousemove=\"MouseEvents\",e.event={add:y,remove:x},e.proxy=function(t,n){var r=2 in arguments&&i.call(arguments,2);if(o(t)){var a=function(){return t.apply(n,r?r.concat(i.call(arguments)):arguments)};return a._zid=h(t),a}if(s(n))return r?(r.unshift(t[n],t),e.proxy.apply(null,r)):e.proxy(t[n],t);throw new TypeError(\"expected function\")},e.fn.bind=function(t,e,n){return this.on(t,e,n)},e.fn.unbind=function(t,e){return this.off(t,e)},e.fn.one=function(t,e,n,r){return this.on(t,e,n,r,1)};var b=function(){return!0},E=function(){return!1},j=/^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,w={preventDefault:\"isDefaultPrevented\",stopImmediatePropagation:\"isImmediatePropagationStopped\",stopPropagation:\"isPropagationStopped\"};e.fn.delegate=function(t,e,n){return this.on(e,t,n)},e.fn.undelegate=function(t,e,n){return this.off(e,t,n)},e.fn.live=function(t,n){return e(document.body).delegate(this.selector,t,n),this},e.fn.die=function(t,n){return e(document.body).undelegate(this.selector,t,n),this},e.fn.on=function(t,n,a,u,f){var c,l,h=this;return t&&!s(t)?(e.each(t,function(t,e){h.on(t,n,a,e,f)}),h):(s(n)||o(u)||u===!1||(u=a,a=n,n=r),(u===r||a===!1)&&(u=a,a=r),u===!1&&(u=E),h.each(function(r,o){f&&(c=function(t){return x(o,t.type,u),u.apply(this,arguments)}),n&&(l=function(t){var r,s=e(t.target).closest(n,o).get(0);return s&&s!==o?(r=e.extend(S(t),{currentTarget:s,liveFired:o}),(c||u).apply(s,[r].concat(i.call(arguments,1)))):void 0}),y(o,t,u,a,n,l||c)}))},e.fn.off=function(t,n,i){var a=this;return t&&!s(t)?(e.each(t,function(t,e){a.off(t,n,e)}),a):(s(n)||o(i)||i===!1||(i=n,n=r),i===!1&&(i=E),a.each(function(){x(this,t,i,n)}))},e.fn.trigger=function(t,n){return t=s(t)||e.isPlainObject(t)?e.Event(t):T(t),t._args=n,this.each(function(){t.type in c&&\"function\"==typeof this[t.type]?this[t.type]():\"dispatchEvent\"in this?this.dispatchEvent(t):e(this).triggerHandler(t,n)})},e.fn.triggerHandler=function(t,n){var r,i;return this.each(function(o,a){r=S(s(t)?e.Event(t):t),r._args=n,r.target=a,e.each(p(a,t.type||t),function(t,e){return i=e.proxy(r),r.isImmediatePropagationStopped()?!1:void 0})}),i},\"focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error\".split(\" \").forEach(function(t){e.fn[t]=function(e){return 0 in arguments?this.bind(t,e):this.trigger(t)}}),e.Event=function(t,e){s(t)||(e=t,t=e.type);var n=document.createEvent(u[t]||\"Events\"),r=!0;if(e)for(var i in e)\"bubbles\"==i?r=!!e[i]:n[i]=e[i];return n.initEvent(t,r,!0),T(n)}}(e),function(e){function p(t,n,r){var i=e.Event(n);return e(t).trigger(i,r),!i.isDefaultPrevented()}function d(t,e,n,i){return t.global?p(e||r,n,i):void 0}function m(t){t.global&&0===e.active++&&d(t,null,\"ajaxStart\")}function g(t){t.global&&!--e.active&&d(t,null,\"ajaxStop\")}function v(t,e){var n=e.context;return e.beforeSend.call(n,t,e)===!1||d(e,n,\"ajaxBeforeSend\",[t,e])===!1?!1:void d(e,n,\"ajaxSend\",[t,e])}function y(t,e,n,r){var i=n.context,o=\"success\";n.success.call(i,t,o,e),r&&r.resolveWith(i,[t,o,e]),d(n,i,\"ajaxSuccess\",[e,n,t]),b(o,e,n)}function x(t,e,n,r,i){var o=r.context;r.error.call(o,n,e,t),i&&i.rejectWith(o,[n,e,t]),d(r,o,\"ajaxError\",[n,r,t||e]),b(e,n,r)}function b(t,e,n){var r=n.context;n.complete.call(r,e,t),d(n,r,\"ajaxComplete\",[e,n]),g(n)}function E(t,e,n){if(n.dataFilter==j)return t;var r=n.context;return n.dataFilter.call(r,t,e)}function j(){}function w(t){return t&&(t=t.split(\";\",2)[0]),t&&(t==c?\"html\":t==f?\"json\":a.test(t)?\"script\":u.test(t)&&\"xml\")||\"text\"}function T(t,e){return\"\"==e?t:(t+\"&\"+e).replace(/[&?]{1,2}/,\"?\")}function S(t){t.processData&&t.data&&\"string\"!=e.type(t.data)&&(t.data=e.param(t.data,t.traditional)),!t.data||t.type&&\"GET\"!=t.type.toUpperCase()&&\"jsonp\"!=t.dataType||(t.url=T(t.url,t.data),t.data=void 0)}function C(t,n,r,i){return e.isFunction(n)&&(i=r,r=n,n=void 0),e.isFunction(r)||(i=r,r=void 0),{url:t,data:n,success:r,dataType:i}}function O(t,n,r,i){var o,s=e.isArray(n),a=e.isPlainObject(n);e.each(n,function(n,u){o=e.type(u),i&&(n=r?i:i+\"[\"+(a||\"object\"==o||\"array\"==o?n:\"\")+\"]\"),!i&&s?t.add(u.name,u.value):\"array\"==o||!r&&\"object\"==o?O(t,u,r,n):t.add(n,u)})}var i,o,n=+new Date,r=t.document,s=/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,a=/^(?:text|application)\\/javascript/i,u=/^(?:text|application)\\/xml/i,f=\"application/json\",c=\"text/html\",l=/^\\s*$/,h=r.createElement(\"a\");h.href=t.location.href,e.active=0,e.ajaxJSONP=function(i,o){if(!(\"type\"in i))return e.ajax(i);var c,p,s=i.jsonpCallback,a=(e.isFunction(s)?s():s)||\"Zepto\"+n++,u=r.createElement(\"script\"),f=t[a],l=function(t){e(u).triggerHandler(\"error\",t||\"abort\")},h={abort:l};return o&&o.promise(h),e(u).on(\"load error\",function(n,r){clearTimeout(p),e(u).off().remove(),\"error\"!=n.type&&c?y(c[0],h,i,o):x(null,r||\"error\",h,i,o),t[a]=f,c&&e.isFunction(f)&&f(c[0]),f=c=void 0}),v(h,i)===!1?(l(\"abort\"),h):(t[a]=function(){c=arguments},u.src=i.url.replace(/\\?(.+)=\\?/,\"?$1=\"+a),r.head.appendChild(u),i.timeout>0&&(p=setTimeout(function(){l(\"timeout\")},i.timeout)),h)},e.ajaxSettings={type:\"GET\",beforeSend:j,success:j,error:j,complete:j,context:null,global:!0,xhr:function(){return new t.XMLHttpRequest},accepts:{script:\"text/javascript, application/javascript, application/x-javascript\",json:f,xml:\"application/xml, text/xml\",html:c,text:\"text/plain\"},crossDomain:!1,timeout:0,processData:!0,cache:!0,dataFilter:j},e.ajax=function(n){var u,f,s=e.extend({},n||{}),a=e.Deferred&&e.Deferred();for(i in e.ajaxSettings)void 0===s[i]&&(s[i]=e.ajaxSettings[i]);m(s),s.crossDomain||(u=r.createElement(\"a\"),u.href=s.url,u.href=u.href,s.crossDomain=h.protocol+\"//\"+h.host!=u.protocol+\"//\"+u.host),s.url||(s.url=t.location.toString()),(f=s.url.indexOf(\"#\"))>-1&&(s.url=s.url.slice(0,f)),S(s);var c=s.dataType,p=/\\?.+=\\?/.test(s.url);if(p&&(c=\"jsonp\"),s.cache!==!1&&(n&&n.cache===!0||\"script\"!=c&&\"jsonp\"!=c)||(s.url=T(s.url,\"_=\"+Date.now())),\"jsonp\"==c)return p||(s.url=T(s.url,s.jsonp?s.jsonp+\"=?\":s.jsonp===!1?\"\":\"callback=?\")),e.ajaxJSONP(s,a);var P,d=s.accepts[c],g={},b=function(t,e){g[t.toLowerCase()]=[t,e]},C=/^([\\w-]+:)\\/\\//.test(s.url)?RegExp.$1:t.location.protocol,N=s.xhr(),O=N.setRequestHeader;if(a&&a.promise(N),s.crossDomain||b(\"X-Requested-With\",\"XMLHttpRequest\"),b(\"Accept\",d||\"*/*\"),(d=s.mimeType||d)&&(d.indexOf(\",\")>-1&&(d=d.split(\",\",2)[0]),N.overrideMimeType&&N.overrideMimeType(d)),(s.contentType||s.contentType!==!1&&s.data&&\"GET\"!=s.type.toUpperCase())&&b(\"Content-Type\",s.contentType||\"application/x-www-form-urlencoded\"),s.headers)for(o in s.headers)b(o,s.headers[o]);if(N.setRequestHeader=b,N.onreadystatechange=function(){if(4==N.readyState){N.onreadystatechange=j,clearTimeout(P);var t,n=!1;if(N.status>=200&&N.status<300||304==N.status||0==N.status&&\"file:\"==C){if(c=c||w(s.mimeType||N.getResponseHeader(\"content-type\")),\"arraybuffer\"==N.responseType||\"blob\"==N.responseType)t=N.response;else{t=N.responseText;try{t=E(t,c,s),\"script\"==c?(1,eval)(t):\"xml\"==c?t=N.responseXML:\"json\"==c&&(t=l.test(t)?null:e.parseJSON(t))}catch(r){n=r}if(n)return x(n,\"parsererror\",N,s,a)}y(t,N,s,a)}else x(N.statusText||null,N.status?\"error\":\"abort\",N,s,a)}},v(N,s)===!1)return N.abort(),x(null,\"abort\",N,s,a),N;var A=\"async\"in s?s.async:!0;if(N.open(s.type,s.url,A,s.username,s.password),s.xhrFields)for(o in s.xhrFields)N[o]=s.xhrFields[o];for(o in g)O.apply(N,g[o]);return s.timeout>0&&(P=setTimeout(function(){N.onreadystatechange=j,N.abort(),x(null,\"timeout\",N,s,a)},s.timeout)),N.send(s.data?s.data:null),N},e.get=function(){return e.ajax(C.apply(null,arguments))},e.post=function(){var t=C.apply(null,arguments);return t.type=\"POST\",e.ajax(t)},e.getJSON=function(){var t=C.apply(null,arguments);return t.dataType=\"json\",e.ajax(t)},e.fn.load=function(t,n,r){if(!this.length)return this;var a,i=this,o=t.split(/\\s/),u=C(t,n,r),f=u.success;return o.length>1&&(u.url=o[0],a=o[1]),u.success=function(t){i.html(a?e(\"<div>\").html(t.replace(s,\"\")).find(a):t),f&&f.apply(i,arguments)},e.ajax(u),this};var N=encodeURIComponent;e.param=function(t,n){var r=[];return r.add=function(t,n){e.isFunction(n)&&(n=n()),null==n&&(n=\"\"),this.push(N(t)+\"=\"+N(n))},O(r,t,n),r.join(\"&\").replace(/%20/g,\"+\")}}(e),function(t){t.fn.serializeArray=function(){var e,n,r=[],i=function(t){return t.forEach?t.forEach(i):void r.push({name:e,value:t})};return this[0]&&t.each(this[0].elements,function(r,o){n=o.type,e=o.name,e&&\"fieldset\"!=o.nodeName.toLowerCase()&&!o.disabled&&\"submit\"!=n&&\"reset\"!=n&&\"button\"!=n&&\"file\"!=n&&(\"radio\"!=n&&\"checkbox\"!=n||o.checked)&&i(t(o).val())}),r},t.fn.serialize=function(){var t=[];return this.serializeArray().forEach(function(e){t.push(encodeURIComponent(e.name)+\"=\"+encodeURIComponent(e.value))}),t.join(\"&\")},t.fn.submit=function(e){if(0 in arguments)this.bind(\"submit\",e);else if(this.length){var n=t.Event(\"submit\");this.eq(0).trigger(n),n.isDefaultPrevented()||this.get(0).submit()}return this}}(e),function(){try{getComputedStyle(void 0)}catch(e){var n=getComputedStyle;t.getComputedStyle=function(t,e){try{return n(t,e)}catch(r){return null}}}}(),e});\r\n    </script>",
        "pluginId": "10109",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {},
        "reference": "",
        "solution": "This is an informational alert and so no changes are required.",
        "alert": "\u73b0\u4ee3 Web \u5e94\u7528\u7a0b\u5e8f",
        "param": "",
        "attack": "",
        "name": "\u73b0\u4ee3 Web \u5e94\u7528\u7a0b\u5e8f",
        "risk": "Informational",
        "id": "283",
        "alertRef": "10109"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "179",
        "inputVector": "",
        "url": "https://mapi.m.jd.com/ksdk/updlist.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "284",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.",
        "method": "GET",
        "evidence": "Age: 120",
        "pluginId": "10050",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as \"proxy\" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. ",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://tools.ietf.org/html/rfc7234\nhttps://tools.ietf.org/html/rfc7231\nhttps://www.rfc-editor.org/rfc/rfc9110.html",
        "solution": "Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:\nCache-Control: no-cache, no-store, must-revalidate, private\nPragma: no-cache\nExpires: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.",
        "alert": "Retrieved from Cache",
        "param": "",
        "attack": "",
        "name": "Retrieved from Cache",
        "risk": "Informational",
        "id": "285",
        "alertRef": "10050-2"
    },
    {
        "sourceid": "3",
        "other": "1722328588, which evaluates to: 2024-07-30 16:36:28",
        "method": "GET",
        "evidence": "1722328588",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "175",
        "inputVector": "",
        "url": "https://frodo.douban.com/api/v2/erebor/feed_ad?unit=dale_feed_fifth_new&support_video=1&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&postback=%7B%22feed_slot_index%22%3A2%7D&need_blocked_cids=false&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&up_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309165978%2F&up_title=%E5%AE%8B%E8%BD%B6%E5%9E%82%E8%80%B3%E5%85%94%E9%80%A0%E5%9E%8B&down_url=https%3A%2F%2Fwww.douban.com%2Fgroup%2Ftopic%2F309177604%2F&down_title=%E4%BB%96%F0%9F%91%83%E6%98%AF%E4%B8%8D%E6%98%AFdo%E4%BA%86&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&oaid=O5w82HKHb9wQAuGm%2BmyQyfUnaL8QKY%2FVRyFKEcnJXbk%3D%0A&timezone=Asia%2FShanghai&_sig=ZHJXUE9fGVKnM6bYcwyU7f%2FjeJo%3D&_ts=1722424619",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "286",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "179",
        "inputVector": "",
        "url": "https://mapi.m.jd.com/ksdk/updlist.json",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "287",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "288",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "GET",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "166",
        "inputVector": "",
        "url": "https://dgstatic.jd.com/dg/ksdk/mid-page.html",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "290",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "L84CWs1OyHQ",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "291",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "GET",
        "evidence": "YGXyQqz-Dhc",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "292",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "T7GythnXz54",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "293",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "294",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "295",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "296",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "297",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "298",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "299",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nerebor.douban.com\nbid=YGXyQqz-Dhc\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "300",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nerebor.douban.com\nbid=L84CWs1OyHQ\n",
        "method": "GET",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "301",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nerebor.douban.com\nbid=T7GythnXz54\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "302",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "303",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "304",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "305",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "183",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=0&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "306",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "GET",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "184",
        "inputVector": "",
        "url": "https://erebor.douban.com/stock/?stock_category=feed&stock_location=2&screen_width=1600&boot_mark=7cbdf084-4af9-4614-8be5-d877e10c2611%0A&screen_height=2524&wx_api_ver=671101245&opensdk_ver=638058496&webview_ua=Mozilla%2F5.0%20%28Linux%3B%20Android%2011%3B%2021051182C%20Build%2FRKQ1.200826.002%3B%20wv%29%20AppleWebKit%2F537.36%20%28KHTML%2C%20like%20Gecko%29%20Version%2F4.0%20Chrome%2F94.0.4606.85%20Safari%2F537.36&sugar=0&update_mark=1722424614.252999636&miui_ver=V13.0.9.0.RKXCNXM&network=wifi&enable_sdk_bidding=1&abt_id=%7B%22166%22%3A%22B%22%2C%22161%22%3A%22B%22%2C%22169%22%3A%22B%22%7D&apikey=0dad551ec0f84ed02907ff5c42e8ec70&channel=Xiaomi_Market&udid=bab139d941928e6c0fe5af156daa33fdd43c1687&os_rom=miui6&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "307",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "182",
        "inputVector": "",
        "url": "https://erebor.douban.com/frodo_bid/?unit=dale_feed_fifth_new&uid=&chicken=163d6a71-71b2-4dda-87a7-50c433dd46ca&fake_chicken=8b5e93f3ce1ab6b0d4adfd0f10193b66&timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "308",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "xS_P78-fwPc",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "309",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "310",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "311",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \napi.douban.com\nbid=xS_P78-fwPc\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "312",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "313",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "314",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "315",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "188",
        "inputVector": "",
        "url": "https://api.douban.com/v2/app_ads/splash_statistics",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "316",
        "alertRef": "10021"
    },
    {
        "sourceid": "3",
        "other": "\ncookie:bid",
        "method": "POST",
        "evidence": "DpaggY5hTyk",
        "pluginId": "10112",
        "cweid": "-1",
        "confidence": "Medium",
        "wascid": "-1",
        "description": "\u7ed9\u5b9a\u7684\u54cd\u5e94\u5df2\u88ab\u786e\u5b9a\u4e3a\u5305\u542b\u4f1a\u8bdd\u7ba1\u7406\u4ee4\u724c\u3002 \u201c\u5176\u4ed6\u4fe1\u606f\u201d\u5b57\u6bb5\u5305\u542b\u4e00\u7ec4\u53ef\u4ee5\u5728\u57fa\u4e8eHeader\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684Header\u4ee4\u724c\u3002 \u5982\u679c\u8bf7\u6c42\u662f\u5728\u5177\u6709\u201c\u81ea\u52a8\u68c0\u6d4b\u201d\u7684\u4f1a\u8bdd\u7ba1\u7406\u65b9\u6cd5\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5219\u6b64\u89c4\u5219\u5c06\u66f4\u6539\u4f1a\u8bdd\u7ba1\u7406\u4ee5\u4f7f\u7528\u5df2\u786e\u5b9a\u7684\u4ee4\u724c\u3002",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {},
        "reference": "https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id",
        "solution": "\u8fd9\u662f\u4e00\u4e2a\u4fe1\u606f\u63d0\u793a\u8b66\u62a5\u800c\u4e0d\u662f\u6f0f\u6d1e\uff0c\u56e0\u6b64\u6ca1\u6709\u9700\u8981\u4fee\u590d\u7684\u5730\u65b9\u3002",
        "alert": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "param": "bid",
        "attack": "",
        "name": "\u4f1a\u8bdd\u7ba1\u7406\u54cd\u5e94\u5df2\u786e\u5b9a",
        "risk": "Informational",
        "id": "317",
        "alertRef": "10112"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "must-revalidate, no-cache, private",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "318",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10010",
        "cweid": "1004",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-1004": "https://cwe.mitre.org/data/definitions/1004.html",
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-community/HttpOnly",
        "solution": "Ensure that the HttpOnly flag is set for all cookies.",
        "alert": "Cookie No HttpOnly Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie No HttpOnly Flag",
        "risk": "Low",
        "id": "319",
        "alertRef": "10010"
    },
    {
        "sourceid": "3",
        "other": "The origin domain used for comparison was: \nartery.douban.com\nbid=DpaggY5hTyk\n",
        "method": "POST",
        "evidence": "",
        "pluginId": "90033",
        "cweid": "565",
        "confidence": "Low",
        "wascid": "15",
        "description": "Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "CWE-565": "https://cwe.mitre.org/data/definitions/565.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2021_A08": "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://tools.ietf.org/html/rfc6265#section-4.1\nhttps://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies",
        "solution": "Always scope cookies to a FQDN (Fully Qualified Domain Name).",
        "alert": "Loosely Scoped Cookie",
        "param": "",
        "attack": "",
        "name": "Loosely Scoped Cookie",
        "risk": "Informational",
        "id": "320",
        "alertRef": "90033"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10054",
        "cweid": "1275",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a 'cross-site' request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "CWE-1275": "https://cwe.mitre.org/data/definitions/1275.html",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html"
        },
        "reference": "https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site",
        "solution": "Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.",
        "alert": "Cookie without SameSite Attribute",
        "param": "bid",
        "attack": "",
        "name": "Cookie without SameSite Attribute",
        "risk": "Low",
        "id": "321",
        "alertRef": "10054-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Set-Cookie: bid",
        "pluginId": "10011",
        "cweid": "614",
        "confidence": "Medium",
        "wascid": "13",
        "description": "A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-614": "https://cwe.mitre.org/data/definitions/614.html",
            "WSTG-v42-SESS-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html",
        "solution": "Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.",
        "alert": "Cookie Without Secure Flag",
        "param": "bid",
        "attack": "",
        "name": "Cookie Without Secure Flag",
        "risk": "Low",
        "id": "322",
        "alertRef": "10011"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "194",
        "inputVector": "",
        "url": "https://artery.douban.com/api/register_xiaomi_token?timezone=Asia%2FShanghai",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "323",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.",
        "method": "POST",
        "evidence": "Access-Control-Allow-Origin: *",
        "pluginId": "10098",
        "cweid": "264",
        "confidence": "Medium",
        "wascid": "14",
        "description": "Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server",
        "messageId": "196",
        "inputVector": "",
        "url": "https://www.google-analytics.com/collect",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A05": "https://owasp.org/www-project-top-ten/2017/A5_2017-Broken_Access_Control.html",
            "CWE-264": "https://cwe.mitre.org/data/definitions/264.html"
        },
        "reference": "https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy",
        "solution": "Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the \"Access-Control-Allow-Origin\" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.",
        "alert": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "param": "",
        "attack": "",
        "name": "\u8de8\u57df\u914d\u7f6e\u9519\u8bef",
        "risk": "Medium",
        "id": "325",
        "alertRef": "10098"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "Golfe2",
        "pluginId": "10036",
        "cweid": "200",
        "confidence": "High",
        "wascid": "13",
        "description": "The web/application server is leaking version information via the \"Server\" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.",
        "messageId": "196",
        "inputVector": "",
        "url": "https://www.google-analytics.com/collect",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html",
            "WSTG-v42-INFO-02": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://httpd.apache.org/docs/current/mod/core.html#servertokens\nhttps://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)\nhttps://www.troyhunt.com/shhh-dont-let-your-response-headers/",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to suppress the \"Server\" header or provide generic details.",
        "alert": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "param": "",
        "attack": "",
        "name": "Server Leaks Version Information via \"Server\" HTTP Response Header Field",
        "risk": "Low",
        "id": "327",
        "alertRef": "10036"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "196",
        "inputVector": "",
        "url": "https://www.google-analytics.com/collect",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "328",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10015",
        "cweid": "525",
        "confidence": "Low",
        "wascid": "13",
        "description": "The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.",
        "messageId": "199",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/sdk/settings/",
        "tags": {
            "CWE-525": "https://cwe.mitre.org/data/definitions/525.html",
            "WSTG-v42-ATHN-06": "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/04-Authentication_Testing/06-Testing_for_Browser_Cache_Weaknesses"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps://grayduck.mn/2021/09/13/cache-control-recommendations/",
        "solution": "For secure content, ensure the cache-control HTTP header is set with \"no-cache, no-store, must-revalidate\". If an asset should be cached consider setting the directives \"public, max-age, immutable\".",
        "alert": "Re-examine Cache-control Directives",
        "param": "cache-control",
        "attack": "",
        "name": "Re-examine Cache-control Directives",
        "risk": "Informational",
        "id": "331",
        "alertRef": "10015"
    },
    {
        "sourceid": "3",
        "other": "",
        "method": "POST",
        "evidence": "",
        "pluginId": "10035",
        "cweid": "319",
        "confidence": "High",
        "wascid": "15",
        "description": "HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.",
        "messageId": "199",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/sdk/settings/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-319": "https://cwe.mitre.org/data/definitions/319.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps://owasp.org/www-community/Security_Headers\nhttps://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps://caniuse.com/stricttransportsecurity\nhttps://datatracker.ietf.org/doc/html/rfc6797",
        "solution": "Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.",
        "alert": "Strict-Transport-Security Header Not Set",
        "param": "",
        "attack": "",
        "name": "Strict-Transport-Security Header Not Set",
        "risk": "Low",
        "id": "332",
        "alertRef": "10035-1"
    },
    {
        "sourceid": "3",
        "other": "1722424625, which evaluates to: 2024-07-31 19:17:05",
        "method": "POST",
        "evidence": "1722424625",
        "pluginId": "10096",
        "cweid": "200",
        "confidence": "Low",
        "wascid": "13",
        "description": "A timestamp was disclosed by the application/web server - Unix",
        "messageId": "199",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/sdk/settings/",
        "tags": {
            "OWASP_2021_A01": "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
            "OWASP_2017_A03": "https://owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure.html",
            "CWE-200": "https://cwe.mitre.org/data/definitions/200.html"
        },
        "reference": "https://cwe.mitre.org/data/definitions/200.html",
        "solution": "Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.",
        "alert": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "param": "Ts",
        "attack": "",
        "name": "\u65f6\u95f4\u6233\u6cc4\u6f0f - Unix",
        "risk": "Low",
        "id": "333",
        "alertRef": "10096"
    },
    {
        "sourceid": "3",
        "other": "This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt \"High\" threshold this scan rule will not alert on client or server error responses.",
        "method": "POST",
        "evidence": "",
        "pluginId": "10021",
        "cweid": "693",
        "confidence": "Medium",
        "wascid": "15",
        "description": "The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.",
        "messageId": "199",
        "inputVector": "",
        "url": "https://api-access.pangolin-sdk-toutiao.com/api/ad/union/sdk/settings/",
        "tags": {
            "OWASP_2021_A05": "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
            "CWE-693": "https://cwe.mitre.org/data/definitions/693.html",
            "OWASP_2017_A06": "https://owasp.org/www-project-top-ten/2017/A6_2017-Security_Misconfiguration.html"
        },
        "reference": "https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)\nhttps://owasp.org/www-community/Security_Headers",
        "solution": "Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.",
        "alert": "X-Content-Type-Options Header Missing",
        "param": "x-content-type-options",
        "attack": "",
        "name": "X-Content-Type-Options Header Missing",
        "risk": "Low",
        "id": "334",
        "alertRef": "10021"
    }
]